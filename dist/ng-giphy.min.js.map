{"version":3,"sources":["giphy.module.js","services/apikey.provider.js","services/giphy.service.js","directives/find.directive.js","directives/findbyid.directive.js","directives/findrand.directive.js","directives/giphy.template.cache.js"],"names":["angular","module","ngGiphyConfig","giphyConfigProvider","setKey","giphyConfig","this","value","key","$get","provider","config","$inject","giphyService","$http","find","q","returnUrl","query","constructor","Array","join","get","url","then","res","data","images","original","findById","id","replace","random","image_url","trending","limit","rating","baseUrl","factory","findGiphy","scope","controller","findGiphyController","controllerAs","bindToController","templateUrl","giphy","vm","giphysrc","directive","findGiphyById","findGiphyByIdController","findRandGiphy","findRandGiphyController","templateCache","$templateCache","put","run"],"mappings":"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","file":"ng-giphy.min.js","sourcesContent":["(function () {\n  'use strict';\n\n  angular.module('ng-giphy', []);\n\n})();\n","(function () {\n  'use strict';\n\n  angular.module('ng-giphy')\n\n    .provider('giphyConfig', giphyConfig)\n    .config(ngGiphyConfig);\n\n  // configure the provider to use the beta key\n  ngGiphyConfig.$inject = ['giphyConfigProvider'];\n  /* @ngInject */\n  function ngGiphyConfig(giphyConfigProvider) {\n    giphyConfigProvider.setKey('dc6zaTOxFJmzC');\n  }\n\n  // giphy API key provider\n  function giphyConfig() {\n    /* jshint validthis: true */\n    this.setKey = function(value) {\n      this.key = value;\n    };\n\n    this.$get = function() {\n      return this;\n    };\n  }\n\n})();\n","(function () {\n  'use strict';\n\n  angular.module('ng-giphy')\n    .factory('giphy', giphyService);\n\n  // services to interact with Giphy API endpoints\n  giphyService.$inject = ['$http', 'giphyConfig'];\n  /* @ngInject */\n  function giphyService($http, giphyConfig) {\n\n    var baseUrl = 'http://api.giphy.com/v1/gifs';\n\n    var url = {\n      random   : baseUrl + '/random?api_key='   + giphyConfig.key,\n      find     : baseUrl + '/search?api_key='   + giphyConfig.key,\n      findById : baseUrl + '/%s?api_key='       + giphyConfig.key,\n      trending : baseUrl + '/trending?api_key=' + giphyConfig.key,\n    };\n\n    // expose the service API\n    return {\n      find        : find,\n      findById    : findById,\n      random      : random,\n      trending    : trending\n    };\n\n    /**\n     * Gets a gif url searching by tag\n     *\n     * @param {string} query\n     * @param {Boolean} returnUrl\n     * @return {string} gif url\n     */\n    function find(q, returnUrl){\n      var query = q.constructor === Array ? q.join('+') : q;\n      return $http.get(url.find + '&q=' + query).then(function (res) {\n        return returnUrl ? res.data.data[0].images.original.url : res.data.data[0];\n      });\n    }\n\n   /**\n    * Gets a gif url searching by id\n    *\n    * @param {string} gif id\n    * @param {Boolean} returnUrl\n    * @return {string} gif url\n    */\n    function findById(id, returnUrl){\n      return $http.get(url.findById.replace('%s', id)).then(function (res) {\n        return returnUrl ? res.data.data.images.original.url : res.data.data;\n      });\n    }\n\n    /**\n     * Gets a random gif url searching by tag\n     *\n     * @param {string} query\n     * @param {Boolean} returnUrl\n     * @return {string} gif url\n     */\n    function random(q, returnUrl){\n      var query = q.constructor === Array ? q.join('+') : q;\n      return $http.get(url.random + '&tag=' + query).then(function (res) {\n        return returnUrl ? res.data.data.image_url : res.data.data;\n      });\n    }\n\n    /**\n     * Fetch GIFs currently trending online. Hand curated by the Giphy editorial team.\n     * The data returned mirrors the GIFs showcased on the Giphy homepage. Returns 25 results by default.\n     *\n     * @param {Number} limit\n     * @param {Boolean} rating\n     * @return {string} gif url\n     */\n    function trending(limit, rating) {\n      return $http.get(url.trending + '&limit=' + limit).then(function (res) {\n        return res.data.data;\n      });\n    }\n  }\n\n})();\n","(function () {\n  'use strict';\n\n  angular.module('ng-giphy')\n    .directive('giphyFind', findGiphy);\n\n  /**\n   * Directive: find gif by tag\n   */\n  function findGiphy() {\n    return {\n      scope: {\n        q     : '=giphyTag',\n        rating: '='\n      },\n      controller: findGiphyController,\n      controllerAs: 'vm',\n      bindToController: true,\n      templateUrl: 'imgTemplate.html'\n    };\n  }\n\n  findGiphyController.$inject = ['giphy'];\n  /* @ngInject */\n  function findGiphyController(giphy) {\n    /* jshint validthis: true */\n    var vm = this;\n\n    giphy.find(vm.q, true).then(function (res) {\n      vm.giphysrc = res;\n    });\n  }\n\n})();\n","(function () {\n  'use strict';\n\n  angular.module('ng-giphy')\n    .directive('giphyId', findGiphyById);\n\n  /**\n   * Directive: find gif by id\n   */\n  function findGiphyById() {\n    return {\n      scope: {\n        id    : '=giphyId',\n        rating: '='\n      },\n      controller: findGiphyByIdController,\n      controllerAs: 'vm',\n      bindToController: true,\n      templateUrl: 'imgTemplate.html'\n    };\n  }\n\n  findGiphyByIdController.$inject = ['giphy'];\n  /* @ngInject */\n  function findGiphyByIdController(giphy) {\n    /* jshint validthis: true */\n    var vm = this;\n\n    giphy.findById(vm.id, true).then(function (res) {\n      vm.giphysrc = res;\n    });\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular.module('ng-giphy')\n    .directive('giphyRand', findRandGiphy);\n\n  /**\n   * Directive: find random gif by tag\n   */\n  function findRandGiphy() {\n    return {\n      scope: {\n        q     : '=giphyTag',\n        rating: '='\n      },\n      controller: findRandGiphyController,\n      controllerAs: 'vm',\n      bindToController: true,\n      templateUrl: 'imgTemplate.html'\n    };\n  }\n\n  findRandGiphyController.$inject = ['giphy'];\n  /* @ngInject */\n  function findRandGiphyController(giphy) {\n    /* jshint validthis: true */\n    var vm = this;\n\n    giphy.random(vm.q, true).then(function (res) {\n      vm.giphysrc = res;\n    });\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular.module('ng-giphy')\n\n    .run(templateCache);templateCache.$inject = ['$templateCache'];\n  /* @ngInject */\n  function templateCache($templateCache) {\n    $templateCache.put('imgTemplate.html', '<img ng-src=\"{{ vm.giphysrc }}\">');\n  }\n\n})();\n"],"sourceRoot":"/source/"}