!function(){"use strict";function t(t){t.setKey("dc6zaTOxFJmzC")}function n(){return{scope:{q:"=giphyTag",rating:"="},controller:i,controllerAs:"vm",bindToController:!0,templateUrl:"imgTemplate.html"}}function i(t){var n=this;t.find(n.q,!0).then(function(t){n.giphysrc=t})}function r(){return{scope:{id:"=giphyId",rating:"="},controller:e,controllerAs:"vm",bindToController:!0,templateUrl:"imgTemplate.html"}}function e(t){var n=this;t.findById(n.id,!0).then(function(t){n.giphysrc=t})}function a(){return{scope:{q:"=giphyTag",rating:"="},controller:o,controllerAs:"vm",bindToController:!0,templateUrl:"imgTemplate.html"}}function o(t){var n=this;t.random(n.q,!0).then(function(t){n.giphysrc=t})}function c(t,n){function i(n,i){var r=n.constructor===Array?n.join("+"):n;return t.get(o.find+"&q="+r).then(function(t){return i?t.data.data[0].images.original.url:t.data.data[0]})}function r(n,i){return t.get(o.findById.replace("%s",n)).then(function(t){return i?t.data.data.images.original.url:t.data.data})}function e(n,i){var r=n.constructor===Array?n.join("+"):n;return t.get(o.random+"&tag="+r).then(function(t){return i?t.data.data.image_url:t.data.data})}var a="http://api.giphy.com/v1/gifs",o={random:a+"/random?api_key="+n.key,find:a+"/search?api_key="+n.key,findById:a+"/%s?api_key="+n.key};return{find:i,findById:r,random:e}}function g(t){t.put("imgTemplate.html",'<img ng-src="{{ vm.giphysrc }}">')}function d(){this.setKey=function(t){this.key=t},this.$get=function(){return this}}angular.module("ng-giphy",[]).directive("giphyFind",n).directive("giphyId",r).directive("giphyRand",a).factory("giphy",c).provider("giphyConfig",d).config(t).run(g),t.$inject=["giphyConfigProvider"],i.$inject=["giphy"],e.$inject=["giphy"],o.$inject=["giphy"],c.$inject=["$http","giphyConfig"],g.$inject=["$templateCache"]}();
//# sourceMappingURL=ng-giphy.min.js.map
